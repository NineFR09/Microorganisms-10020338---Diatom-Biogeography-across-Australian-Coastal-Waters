## Load libraries
```{r}
library(tidyverse)
library(dplyr)
library(tidyr)
library(ggplot2)
library(ggpubr)
lirbary(broom) # for the tidy() function
library(vegan)
library(FSA) # for figure 4
library(writexl)
library(readxl)
library(rstatix)
```

## STATS - Figure 2 (Kruskal-Wallis & Wilcoxon) -----------------------------------------
```{r}
## Temperature
kruskal.test(env_data$temperature_deg_c ~ env_data$uniqcode)
temp_res <- pairwise.wilcox.test(env_data$temperature_deg_c, env_data$uniqcode, p.adjust.method = "BH") %>% tidy() %>% as.data.frame()
## Phosphate 
phosphate <- env_data %>% filter(!sample == c("34237")) # = outlier removed in the figure
kruskal.test(phosphate$phosphate_umol_per_l ~ phosphate$uniqcode)
phos_res <- pairwise.wilcox.test(phosphate$phosphate_umol_per_l, phosphate$uniqcode, p.adjust.method = "BH") %>% tidy() %>% as.data.frame()
## Ammonium 
ammonium <- env_data %>% filter(!sample == c("21862", "21952")) # = outlier removed in the figure
kruskal.test(env_data$ammonium_umol_per_l ~ env_data$uniqcode)
amm_res <- pairwise.wilcox.test(ammonium$ammonium_umol_per_l, ammonium$uniqcode, p.adjust.method = "BH") %>% tidy() %>% as.data.frame()
## Nitrate 
nitrate <- env_data %>% filter(!sample == c("35355")) # = outlier removed in the figure
kruskal.test(env_data$nitrate_nitrite_umol_per_l ~ env_data$uniqcode)
nitr_res <- pairwise.wilcox.test(nitrate$nitrate_nitrite_umol_per_l, nitrate$uniqcode, p.adjust.method = "BH") %>%  tidy() %>%  as.data.frame()
## Day length 
kruskal.test(env_data$day_length ~ env_data$uniqcode)
day_res <- pairwise.wilcox.test(env_data$day_length, env_data$uniqcode, p.adjust.method = "BH") %>%
  tidy() %>%  as.data.frame()
## Silicate 
kruskal.test(env_data$silicate_umol_per_l ~ env_data$uniqcode)
sili_res <- pairwise.wilcox.test(env_data$silicate_umol_per_l, env_data$uniqcode, p.adjust.method = "BH") %>% tidy() %>% as.data.frame()
## Salinity 
kruskal.test(env_data$salinity_psu...12 ~ env_data$uniqcode)
sali_res <- pairwise.wilcox.test(env_data$salinity_psu...12, env_data$uniqcode, p.adjust.method = "BH") %>% tidy() %>% as.data.frame()

## Create a column with the variable tested
temp_res <- temp_res %>% mutate(var = "temperature_deg_c")
phos_res <- phos_res %>% mutate(var = "phosphate_umol_per_l")
amm_res <- amm_res %>% mutate(var = "ammonium_umol_per_l")
nitr_res <- nitr_res %>% mutate(var = "nitrate_nitrite_umol_per_l")
day_res <- day_res %>% mutate(var = "day_length")
sili_res <- sili_res %>% mutate(var = "silicate_umol_per_l")
sali_res <- sali_res %>% mutate(var = "salinity_psu...12")

## Merge all the files together to save it
env_pairwisewilcoxon <- combine(temp_res,phos_res,amm_res,nitr_res,day_res,sili_res,sali_res)

## Create Table with min/max/sd for each site 
## Temperature
temp.av <- env_data %>% group_by(uniqcode) %>% summarise(mean = mean(Temperature), sd = sd(Temperature), max = max(Temperature), min = min(Temperature))
## Silicate
silica.av <- env_data %>% group_by(uniqcode) %>% summarise(mean = mean(silicate_umol_per_l), sd = sd(silicate_umol_per_l), max = max(silicate_umol_per_l), min = min(silicate_umol_per_l)) 
## Phosphate
phosphate.av <- env_data %>% group_by(uniqcode) %>% summarise(mean = mean(Phosphate), sd = sd(Phosphate), max = max(Phosphate), min = min(Phosphate))
## Ammonium
ammonium.av <- env_data %>% group_by(uniqcode) %>% summarise(mean = mean(Amonium), sd = sd(Amonium), max = max(Amonium), min = min(Amonium))
##  Nitrate
nitrate.av <- env_data %>% group_by(uniqcode) %>% summarise(mean = mean(Nitrate), sd = sd(Nitrate), max = max(Nitrate), min = min(Nitrate))
## Salinity
salinity.av <- env_data %>% group_by(uniqcode) %>% summarise(mean = mean(salinity_psu...12), sd = sd(salinity_psu...12), max = max(salinity_psu...12), min = min(salinity_psu...12))
```

## STATS - Figure 3 (PERMANOVA) -----------------------------------------
1) To remove all na
```{r}
diatoms_surf <- ungroup(diatoms_rare) %>% filter(depth_m == 2) ## 212 samples
diatoms.na <- ungroup(diatoms_surf) %>% select("sample", "uniqcode", "date_utc", "GID", "depth_m", "day_length", "temperature_deg_c", "silicate_umol_per_l", "phosphate_umol_per_l", "nitrate_nitrite_umol_per_l", "ammonium_umol_per_l", "abund_rare","RA.percent", "year", "month", 'ASVid','tax.Kingdom', 'tax.Supergroup','tax.Division','tax.Class','tax.Family', 'tax.Genus','tax.Species', 'GID', 'ASV', "longitude_decimal_degrees", "latitude_decimal_degrees")
diatoms.na <- na.omit(diatoms.na) 
diatoms.na <- distinct(diatoms.na)
diatoms.na <- diatoms.na %>% arrange(sample)
```
2) Create an ASV matrix
```{r}
com <- ungroup(diatoms.na) %>% select('sample', 'GID', 'RA.percent') %>% spread(key =sample, value=RA.percent, fill=0)  
com.matrix <-  as.matrix(com[,-c(1)])
row.names(com.matrix)<- paste0(com$GID)
com.matrix.nz <- com.matrix[,colSums(com.matrix)!=0] 
```
3) Create a Sample data table
```{r}
env.vars <- ungroup(diatoms.na) %>% select(c("date_utc", "day_length", "temperature_deg_c", "silicate_umol_per_l", "depth_m", "sample",  "phosphate_umol_per_l", "nitrate_nitrite_umol_per_l", "ammonium_umol_per_l", "uniqcode", "longitude_decimal_degrees", "latitude_decimal_degrees")) 
env.vars <- distinct(env.vars)
env.vars <- env.vars %>% arrange(sample)
rownames(env.vars) <- env.vars$sample
```
4) STATS - pairwise comparison
```{r}
## function pairwise.adonis() - from GitHub 'pmartinezarbizu'
pairwise.adonis <- function(x,factors, sim.function = 'vegdist', sim.method = 'bray', p.adjust.m ='bonferroni',reduce=NULL,perm=9999)
{
  
  co <- combn(unique(as.character(factors)),2)
  pairs <- c()
  Df <- c()
  SumsOfSqs <- c()
  F.Model <- c()
  R2 <- c()
  p.value <- c()
  
  
  for(elem in 1:ncol(co)){
    if(inherits(x, 'dist')){
      x1=as.matrix(x)[factors %in% c(as.character(co[1,elem]),as.character(co[2,elem])),
                      factors %in% c(as.character(co[1,elem]),as.character(co[2,elem]))]
      }
  
    else  (
      if (sim.function == 'daisy'){
            x1 = daisy(x[factors %in% c(co[1,elem],co[2,elem]),],metric=sim.method)
        } 
      else{x1 = vegdist(x[factors %in% c(co[1,elem],co[2,elem]),],method=sim.method)}
    )
    
    ad <- adonis(x1 ~ factors[factors %in% c(co[1,elem],co[2,elem])],
                 permutations = perm);
    pairs <- c(pairs,paste(co[1,elem],'vs',co[2,elem]));
    Df <- c(Df,ad$aov.tab[1,1])
	SumsOfSqs <- c(SumsOfSqs, ad$aov.tab[1,2])
	F.Model <- c(F.Model,ad$aov.tab[1,4]);
    R2 <- c(R2,ad$aov.tab[1,5]);
    p.value <- c(p.value,ad$aov.tab[1,6])
  }
  p.adjusted <- p.adjust(p.value,method=p.adjust.m)
  
  sig = c(rep('',length(p.adjusted)))
  sig[p.adjusted <= 0.05] <-'.'
  sig[p.adjusted <= 0.01] <-'*'
  sig[p.adjusted <= 0.001] <-'**'
  sig[p.adjusted <= 0.0001] <-'***'
  pairw.res <- data.frame(pairs,Df,SumsOfSqs,F.Model,R2,p.value,p.adjusted,sig)
  
  if(!is.null(reduce)){
    pairw.res <- subset (pairw.res, grepl(reduce,pairs))
    pairw.res$p.adjusted <- p.adjust(pairw.res$p.value,method=p.adjust.m)
    
    sig = c(rep('',length(pairw.res$p.adjusted)))
 	sig[pairw.res$p.adjusted <= 0.1] <-'.'
	sig[pairw.res$p.adjusted <= 0.05] <-'*'
	sig[pairw.res$p.adjusted <= 0.01] <-'**'
	sig[pairw.res$p.adjusted <= 0.001] <-'***'
    pairw.res <- data.frame(pairw.res[,1:7],sig)
  }
  class(pairw.res) <- c("pwadonis", "data.frame")
  return(pairw.res)
} 
```
5) STATS - PERMANOVA
```{r}
permanova <- adonis2(t(com.matrix.nz) ~ uniqcode,
               data = env.vars, permutations=9999, method = "bray")

perm.pairwise <- pairwise.adonis(t(com.matrix.nz), env.vars$uniqcode, 
                                 sim.function = "vegdist",
                                 sim.method = "bray",
                                 p.adjust.m = "BH") ## x=OTU matrix not

```

