##Load 18S and 16S rarefied files + libraries 

```{r, library to load}
library(tidyverse)
library(dplyr)
library(tidyr)
library(ggplot2)
library(ggforce)
library(ggfortify)
library(vegan)
library(FSA) # for figure 4
library(RColorBrewer)
library(randomcoloR)
library(writexl)
library(readxl)
```
```{r}
#Diatoms
diatoms_rare <- read_csv("~/diatoms_rare_070521.csv")
diatoms_rare$uniqcode <- factor(diatoms_rare$uniqcode, levels =rev(c("MAI", "KAI", "PHB","ROT", "NSI", "YON", "DAR")))
diatoms_rare <- diatoms_rare %>% filter(year > 2014)  
diatoms_surf <- diatoms_rare %>% filter(depth_m == 2)
```
```{r}
#Bacteria 
bac_rare <- read_csv("~/bac_nrs_rare20k.nine.060521.csv") 
bac_rare$uniqcode <- factor(bac_rare$uniqcode, levels =rev(c("MAI", "KAI", "PHB","ROT", "NSI", "YON", "DAR")))
bac_rare <- bac_rare %>% separate(utc_date_sampled_yyyymmdd , c('year','month','day'), sep='-', remove=F)
bac_rare <- bac_rare %>% filter(year > 2014) 
colnames(bac_rare)[colnames(bac_rare) == "code"] <- "sample"
bac_rare <- bac_rare %>% unite('FG', c(tax.Family, tax.Genus), remove = F, sep = ';')
bac_rare <- bac_rare %>% unite('OFG', c(tax.Order, FG), remove=F, sep=';')
bac_rare <- bac_rare %>% unite('OF', c(tax.Order, tax.Family), remove=F, sep=';')
bac_rare$bac <- c("bac")
bac_rare <- bac_rare %>% unite('tax.Genus', c(bac, tax.Genus), remove=T, sep=';')
bac_rare <- bac_rare %>% unite('GID', c(tax.Genus, ASVid), remove=F, sep=';')
bac_surf <- ungroup(bac_rare) %>% filter(depth_m == 2)
```
```{r}
#Colours used for the NRS station
display.brewer.pal(9, "Set1")
brewer.pal(9, "Set1")
#c("#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00", "#FFFF33", "#A65628")
#DAR = "#E41A1C", YON = "#377EB8", NSI = "#4DAF4A", ROT = "#984EA3", PHB = "#FF7F00", KAI = "#FFFF33", MAI = "#A65628"
```
```{r}
mycols73 <- c("#99EEFF","#33BBFF","#33DDFF","#086391","#5299E0","#007FFF","#004C99","#0dc9e5","#054261","#9EFADD","#73F1CA","#52E4BB","#3BCFAB","#2BB398","#A0E0F7","#7ECEED","#64B8DE","#4F9CC7","#3E7EA9","#ADBAFA","#899AF1","#6C7EE4","#5667CF","#4352B3","#D8BBFB","#C094F4","#AC74E8","#985CD5","#8548BB","#58156c","#F4C5FD","#EDA7F9","#E380EF","#D863DE","#C44CBF","#b43dd8","#FDC9E1","#FAADCF","#F189B4","#E46C98","#C74F6F","#FCBBBC","#ED7E80","#D75D5F","#E83535","#A93E3F","#8B4513","#A0522D","#A96928","#BD7E32","#CF923E","#DEA54D","#E9B65F","#724407","#F18109","#F29B0F","#F3B516","#F4CF1D","#FBFFB2","#A92A28","#BD3532","#D74945","#E45B55","#ED6F6A","#B8F792","#92ED6A","#6ADE4D","#3EC737","#28A93A","#99C745","#75A12D","#26912A","#1A6E20")
```

## Figure 1 (NRS station MAP) 
```{r}
#Load specific library
library(maps)
library(mapdata)
library(ncdf4)
library(oce)
library(rnaturalearthdata)
library(rnaturalearth)
library(rgeos)
```
```{r}
sst01<-nc_open("~/IMOS_aggregation_20210618T062349Z.nc")
sst01.d<-ncvar_get(sst01, 'sea_surface_temperature');  ### check the variable name is correct, can be 'sst4', or other names
sstlon <- ncvar_get(sst01, 'lon')
sstlat <- ncvar_get(sst01, 'lat')
sstL<-vector('list', length(sst01.d))

  sstL <-as.vector(sst01.d-273.15)
## Arrange the data into long format for ggplot
longitude<- rep(sstlon, length(sstlat))
## This loop might take a while and would be improved by converting to an apply function
latitude  <- NA
for (i in seq_along(sstlat)){
  latitude <-c(latitude , rep(sstlat[i],length(sstlon)))
}
sst=as.vector(sstL)
SSTlong<-as.data.frame(cbind(lat=latitude[1:length(sst)], lon=longitude[1:length(sst)], sst=as.vector(sstL)))

world <- ne_countries(scale = "Medium", returnclass = "sf")

#To create a dataframe with the coordinate of the NRS station 
NRSlabs <- data.frame(
  lat = c(-12.4634, -27.5323, -32.0064, -19.4591, -34.0692, -35.7752, -42.6451), 
  long = c(130.8456, 153.4626, 115.5073, 147.4805, 151.125, 137.2142, 148.065), 
  names = c("DAR", "NSI", "ROT", "YON", "PHB", "KAI", "MAI"), 
  stringsAsFactors = FALSE
)

NRSlabs$names <- factor(NRSlabs$names, levels =c("DAR", "YON", "NSI", "ROT", "PHB", "KAI", "MAI"))

xrange <- c(105,162)
yrange <- c (-50, -6)

mycol7 <- c("#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00", "#FFFF33", "#A65628")

ggplot() + 
  geom_tile(data=SSTlong, aes(x=lon, y=lat, fill=sst)) + 
        scale_fill_gradientn(colors=oceColorsTemperature(300), na.value = NA, name='SST (°C)', limits=c(4,30)) +   
  geom_sf(data = world, lwd = 0) + coord_sf(xlim = xrange, ylim=yrange, expand=F) +
  #geom_segment(data=as.data.frame(dat2), aes(x=x, xend=x2, y=y, yend=y2), lwd=0.1, arrow = arrow(type = 'open',length = unit(0.05, "cm"))) + 
  geom_point(data=NRSlabs, aes(x=long, y=lat, color = names), size = 8) +
  scale_color_manual(values=mycol7, name='NRS station') +
  #geom_label(data=NRSlabs, aes(x=long, y=lat, label=names), size=8) + #%>%  filter(long> 143, lat < -21) color='white', fill='black', label.padding=unit(0.1,'cm'),
  labs(title='', x= 'Longitude (°E)', y='Latitude (°N)') +
  theme_bw() +
  theme(plot.title = element_text(size = 14, family = "Arial", face = "bold"),
        text=element_text(family = "Arial"),
        axis.title = element_text(size = 20, family = "Arial",face="bold"),
        axis.text.x = element_text(colour="black", size = 18, face = "bold", vjust = 0.6),
        axis.text.y = element_text(colour="black", size = 18),
        axis.line = element_line(size=0.5, colour = "black"),
        legend.title = element_text(colour= "black", size=20, face= "bold" ),
        legend.text = element_text(size = 14)) 
```

## Figure 2 (Environmental data boxplot)
1) Sample data table
```{r, }
env.vars2 <- diatoms_surf %>% dplyr::select(c("date_utc", "depth_m", "sample", "uniqcode", "day_length", "temperature_deg_c", "silicate_umol_per_l", "phosphate_umol_per_l", "nitrate_nitrite_umol_per_l", "ammonium_umol_per_l", "salinity_psu...12",  "longitude_decimal_degrees", "latitude_decimal_degrees"))
env.vars2 <- na.omit(env.vars2)
env.vars2 <- distinct(env.vars2)
env_data <- env.vars2
```
2)MULTIPLOT function
```{r}
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
  library(grid)

  # Make a list from the ... arguments and plotlist
  plots <- c(list(...), plotlist)

  numPlots = length(plots)

  # If layout is NULL, then use 'cols' to determine layout
  if (is.null(layout)) {
    # Make the panel
    # ncol: Number of columns of plots
    # nrow: Number of rows needed, calculated from # of cols
    layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
                    ncol = cols, nrow = ceiling(numPlots/cols))
  }

 if (numPlots==1) {
    print(plots[[1]])

  } else {
    # Set up the page
    grid.newpage()
    pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))

    # Make each plot, in the correct location
    for (i in 1:numPlots) {
      # Get the i,j matrix positions of the regions that contain this subplot
      matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))

      print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
                                      layout.pos.col = matchidx$col))
    }
  }
}
```
3) Create boxplot for each variable and group them in one panel
```{r}
fill = c("#E41A1C", "#377EB8", "#4DAF4A", "#984EA3", "#FF7F00", "#FFFF33", "#A65628")

## TEMPERATURE boxplot
ggtemp <- ggplot(env_data, aes(x= uniqcode, y= temperature_deg_c, colour = temperature_deg_c )) +
  geom_boxplot(colour = "black", fill = fill, size  = 1, outlier.shape = NA) + #outlier.shape = 1
  geom_jitter(width = 0.2) +
  scale_colour_steps(low = "#FFCCCC", high = "#CC0000", "Temperature (°C)", guide = "none") +
  scale_y_continuous(limits = c(0,40)) +
  theme_bw() +
  theme(panel.grid.major = element_line(colour = "#d3d3d3"),
              panel.grid.minor = element_blank(),
              #panel.border = element_blank(),
              panel.background = element_blank(),
              plot.title = element_text(size = 14, family = "Arial", face = "bold"),
              text=element_text(family = "Arial"),
              axis.title = element_text(size = 14, family = "Arial",face="bold"),
              axis.text.x = element_text(colour="black", size = 14, face = "bold"),
              axis.text.y = element_text(colour="black", size = 14),
              axis.line = element_line(size=0.5, colour = "black")) +
  labs(x = "",
       y = "Temperature (°C)")
ggtemp #no specific outlier for any site

## PHOSPHATE boxplot
ggphosp <- ggplot(phosphate , aes(x= uniqcode, y= phosphate_umol_per_l, colour = phosphate_umol_per_l )) + #%>% filter(!sample == c("34237"))
  geom_boxplot(colour = "black", fill = fill,size  = 1, outlier.shape = NA) + #outlier.shape = 1
  geom_jitter(width = 0.2) +
  scale_colour_steps(low = "#FFCCCC", high = "#CC0000", "Phosphate (umol/mL)", guide = "none") +
  scale_y_continuous(limits = c(0,0.6)) +
  theme_bw() +
  theme(panel.grid.major = element_line(colour = "#d3d3d3"),
              panel.grid.minor = element_blank(),
              #panel.border = element_blank(),
              panel.background = element_blank(),
              plot.title = element_text(size = 14, family = "Arial", face = "bold"),
              text=element_text(family = "Arial"),
              axis.title = element_text(size = 14, family = "Arial", face="bold"),
              axis.text.x = element_text(colour="black", size = 14, face = "bold"),
              axis.text.y = element_text(colour="black", size = 14),
              axis.line = element_line(size=0.5, colour = "black")) +
  labs(x = "",
       y = "Phosphate (umol/mL)")
ggphosp# sample = 34237 is an outlier for DAR

## NITRATE boxplot
ggnitrate <- ggplot(nitrate , aes(x= uniqcode, y= nitrate_nitrite_umol_per_l, colour = nitrate_nitrite_umol_per_l )) + #%>% filter(!sample == c("35355"))
  geom_boxplot(colour = "black", fill = fill,size  = 1, outlier.shape = NA) + #outlier.shape = 1
  geom_jitter(width = 0.2) +
  scale_colour_steps(low = "#FFCCCC", high = "#CC0000", "Nitrate (umol/mL)", guide = "none") +
  scale_y_continuous(limits = c(0,8)) +
  theme_bw() +
  theme(panel.grid.major = element_line(colour = "#d3d3d3"),
              panel.grid.minor = element_blank(),
              #panel.border = element_blank(),
              panel.background = element_blank(),
              plot.title = element_text(size = 14, family = "Arial", face = "bold"),
              text=element_text(family = "Arial"),
              axis.title = element_text(size = 14, family = "Arial",face="bold"),
              axis.text.x = element_text(colour="black", size = 14, face = "bold"),
              axis.text.y = element_text(colour="black", size = 14),
              axis.line = element_line(size=0.5, colour = "black")) +
  labs(x = "",
       y = "Nitrate (umol/mL)")  
ggnitrate # sample = 35355 is an outlier for DAR

## AMMONIUM boxplot
ggamo <- ggplot(ammonium , aes(x= uniqcode, y= ammonium_umol_per_l, colour = ammonium_umol_per_l )) +#%>% filter(!sample == c("21862", "21952"))  
  geom_boxplot(colour = "black", fill = fill,size  = 1, outlier.shape = NA) + #outlier.shape = 1
  geom_jitter(width = 0.2) +
  scale_colour_steps(low = "#FFCCCC", high = "#CC0000", "Ammonium (umol/mL)", guide = "none") +
  scale_y_continuous(limits = c(0,1.2)) +
  theme_bw() +
  theme(panel.grid.major = element_line(colour = "#d3d3d3"),
              panel.grid.minor = element_blank(),
              #panel.border = element_blank(),
              panel.background = element_blank(),
              plot.title = element_text(size = 14, family = "Arial", face = "bold"),
              text=element_text(family = "Arial"),
              axis.title = element_text(size = 14, family = "Arial",face="bold"),
              axis.text.x = element_text(colour="black", size = 14, face = "bold"),
              axis.text.y = element_text(colour="black", size = 14),
              axis.line = element_line(size=0.5, colour = "black")) +
  labs(x = "",
       y = "Ammonium (umol/mL)")  
ggamo # sample = 21862 is an outlier for PHB; 21952 for NSI

## SILICATE boxplot
ggsili <- ggplot(env_data, aes(x= uniqcode, y= silicate_umol_per_l, colour = silicate_umol_per_l )) + 
  geom_boxplot(colour = "black", fill = fill,size  = 1, outlier.shape = NA) + #outlier.shape = 1
  geom_jitter(width = 0.2) +
  scale_colour_steps(low = "#FFCCCC", high = "#CC0000", "Silicate (umol/mL)", guide = "none") +
  scale_y_continuous(limits = c(0,8)) +
  theme_bw() +
  theme(panel.grid.major = element_line(colour = "#d3d3d3"),
              panel.grid.minor = element_blank(),
              #panel.border = element_blank(),
              panel.background = element_blank(),
              plot.title = element_text(size = 14, family = "Arial", face = "bold"),
              text=element_text(family = "Arial"),
              axis.title = element_text(size = 14, family = "Arial",face="bold"),
              axis.text.x = element_text(colour="black", size = 14, face = "bold"),
              axis.text.y = element_text(colour="black", size = 14),
              axis.line = element_line(size=0.5, colour = "black")) +
  labs(x = "",
       y = "Silicate (umol/mL)")  
ggsili # no specific outliers

## DAYLENGHT boxplot
ggtime <- ggplot(env_data, aes(x= uniqcode, y= day_length, colour = day_length )) + 
  geom_boxplot(colour = "black", fill = fill,size  = 1, outlier.shape = NA) + #outlier.shape = 1
  geom_jitter(width = 0.2) +
  scale_colour_steps(low = "#FFCCCC", high = "#CC0000", "Day length (hour)", guide = "none") +
  scale_y_continuous(limits = c(0,16)) +
  theme_bw() +
  theme(panel.grid.major = element_line(colour = "#d3d3d3"),
              panel.grid.minor = element_blank(),
              #panel.border = element_blank(),
              panel.background = element_blank(),
              plot.title = element_text(size = 14, family = "Arial", face = "bold"),
              text=element_text(family = "Arial"),
              axis.title = element_text(size = 14, family = "Arial",face="bold"),
              axis.text.x = element_text(colour="black", size = 14, face = "bold"),
              axis.text.y = element_text(colour="black", size = 14),
              axis.line = element_line(size=0.5, colour = "black")) +
  labs(x = "",
       y = "Daylength (h)")  
ggtime # no specific outliers
  
## SALINITY boxplot
ggsal <- ggplot(env_data, aes(x= uniqcode, y= salinity_psu...12, colour = salinity_psu...12 )) + 
  geom_boxplot(colour = "black", fill = fill,size  = 1, outlier.shape = NA) + #outlier.shape = 1
  geom_jitter(width = 0.2) +
  scale_colour_steps(low = "#FFCCCC", high = "#CC0000", "Salinity (hour)", guide = "none") +
  scale_y_continuous(limits = c(32,38)) +
  theme_bw() +
  theme(panel.grid.major = element_line(colour = "#d3d3d3"),
              panel.grid.minor = element_blank(),
              #panel.border = element_blank(),
              panel.background = element_blank(),
              plot.title = element_text(size = 14, family = "Arial", face = "bold"),
              text=element_text(family = "Arial"),
              axis.title = element_text(size = 14, family = "Arial",face="bold"),
              axis.text.x = element_text(colour="black", size = 14, face = "bold"),
              axis.text.y = element_text(colour="black", size = 14),
              axis.line = element_line(size=0.5, colour = "black")) +
  labs(x = "",
       y = "Salinity (psu)")  
ggsal  # no specific outliers

multiplot(ggtemp, ggphosp, ggnitrate, ggamo, ggsili, ggsal, cols=2)
```
